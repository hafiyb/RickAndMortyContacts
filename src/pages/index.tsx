import Head from 'next/head';
import {
  Box,
  Button,
  Grid,
  Pagination,
  TextField,
  Typography,
} from '@mui/material';
import ContactCard from '@/components/contactCard';
import { useEffect, useState } from 'react';

const styles = {
  page: {
    backgroundColor: 'background',
    width: '100vw',
    height: '100vh',
    overflow: 'auto',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    px: {
      xs: '5%',
      sm: '10%',
    },
  },
};

export default function Home() {
  const [page, setPage] = useState(1);
  const [characters, setCharacters] = useState([]);

  useEffect(() => {
    fetch(`https://rickandmortyapi.com/api/character`)
      .then((res) => res.json())
      .then((data) => console.log(data));
    fetch(`https://rickandmortyapi.com/api/character/?page=${page}`)
      .then((res) => res.json())
      .then((data) => setCharacters(data));
  }, [page]);

  useEffect(() => {
    console.log(characters);
  }, [characters]);
  useEffect(() => {
    console.log(page);
  }, [page]);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Box sx={styles.page}>
        <Box
          sx={{
            width: '100%',
            py: '5%',
          }}
        >
          <TextField placeholder='Search here' />
        </Box>
        <Grid container>
          <Grid item xs={3}>
            <Typography>Name</Typography>
          </Grid>
          <Grid item xs={3}>
            <Typography>Status</Typography>
          </Grid>
          <Grid item xs={3}>
            <Typography>Species</Typography>
          </Grid>
          <Grid item xs={3}>
            <Typography>Gender</Typography>
          </Grid>
        </Grid>
        <Box sx={{ width: '100%', maxHeight: '50%', overflow: 'auto' }}>
          {characters?.results?.map((character) => (
            <ContactCard
              id={character.id}
              name={character.name}
              status={character.status}
              species={character.species}
              gender={character.gender}
            />
          ))}
        </Box>
        <Pagination count={characters?.info?.pages} onChange={(e,value) => setPage(value)}  />
      </Box>
    </>
  );
}
